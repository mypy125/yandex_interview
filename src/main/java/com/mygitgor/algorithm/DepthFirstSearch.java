package com.mygitgor.algorithm;

import java.io.*;

/**
 * V__2
 */
public class DepthFirstSearch {
    /**
     *Дан неориентированный граф, возможно с петлями и кратными ребрами. Необходимо найти компоненту связности,
     * содержащую вершину с номером 1.
     * Формат ввода
     * В первой строке записаны два целых числа N N ( 1 ≤ N ≤ 1 0 3 1≤N≤103) и M M ( 0 ≤ M ≤ 5 × 1 0 5 0≤M≤5×105) — количество вершин и ребер в графе.
     * В последующих M M строках перечислены ребра — пары чисел, определяющие номера вершин, которые соединяют ребра.
     * Вершины нумеруются с единицы.
     * Формат вывода
     * В первой строке выведите число K K — количество вершин в компоненте связности.
     * Во второй строке выведите K K целых чисел — вершины компоненты связности, перечисленные в порядке возрастания номеров.
     * Примечание
     * Петля в графе — это ребро, которое соединяет вершину с самой собой.
     * Кратные рёбра в графе — это рёбра, которые соединяют одну и ту же пару вершин.
     * Компонента связности в неориентированном графе — это подмножество вершин таких, что все вершины достижимы друг из друга.
     */
    public static void main(String[] args) throws IOException {
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
             BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out)))
        {
            //TODO code hire
        }
    }
}
