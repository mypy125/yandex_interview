package com.mygitgor.algorithm;

import java.io.*;

/**
 * V__2
 */
public class ConnectivityComponents {
    /**
     *Дан неориентированный невзвешенный граф, состоящий из N N вершин и M M ребер. Необходимо посчитать количество его компонент связности и вывести их.
     * Напомним:
     * Компонента связности в неориентированном графе - это подмножество вершин, таких что все вершины достижимы друг из друга.
     * Формат ввода
     * Во входном файле записано два числа N и M (0 < < N ≤ ≤ 100000, 0 ≤ ≤ M ≤ ≤ 100000).
     * В следующих M строках записаны по два числа i и j (1 ≤ ≤ i, j ≤ ≤ N), которые означают, что вершины i и j соединены ребром.
     * Формат вывода
     * В первой строчке выходного файла выведите количество компонент связности. Далее выведите сами компоненты связности в следующем формате:
     * в первой строке количество вершин в компоненте, во второй - сами вершины в произвольном порядке.
     */
    public static void main(String[] args) throws IOException {
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
             BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out)))
        {
            //TODO code hire
        }
    }
}
